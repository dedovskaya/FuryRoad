/*!
 * @pixi/filter-multi-color-replace - v4.1.5
 * Compiled Wed, 29 Sep 2021 14:05:57 UTC
 *
 * @pixi/filter-multi-color-replace is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(r,e,o){"use strict";var n=function(r,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(r[o]=e[o])})(r,e)};Object.create;Object.create;var t=function(r){function e(e,o,n){void 0===o&&(o=.05),void 0===n&&(n=e.length);var t=r.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float epsilon;\n\nconst int MAX_COLORS = %maxColors%;\n\nuniform vec3 originalColors[MAX_COLORS];\nuniform vec3 targetColors[MAX_COLORS];\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n\n    float alpha = gl_FragColor.a;\n    if (alpha < 0.0001)\n    {\n      return;\n    }\n\n    vec3 color = gl_FragColor.rgb / alpha;\n\n    for(int i = 0; i < MAX_COLORS; i++)\n    {\n      vec3 origColor = originalColors[i];\n      if (origColor.r < 0.0)\n      {\n        break;\n      }\n      vec3 colorDiff = origColor - color;\n      if (length(colorDiff) < epsilon)\n      {\n        vec3 targetColor = targetColors[i];\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\n        return;\n      }\n    }\n}\n".replace(/%maxColors%/g,n.toFixed(0)))||this;return t._replacements=[],t._maxColors=0,t.epsilon=o,t._maxColors=n,t.uniforms.originalColors=new Float32Array(3*n),t.uniforms.targetColors=new Float32Array(3*n),t.replacements=e,t}return function(r,e){function o(){this.constructor=r}n(r,e),r.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}(e,r),Object.defineProperty(e.prototype,"replacements",{get:function(){return this._replacements},set:function(r){var e=this.uniforms.originalColors,n=this.uniforms.targetColors,t=r.length;if(t>this._maxColors)throw new Error("Length of replacements ("+t+") exceeds the maximum colors length ("+this._maxColors+")");e[3*t]=-1;for(var i=0;i<t;i++){var l=r[i],a=l[0];"number"==typeof a?a=o.hex2rgb(a):l[0]=o.rgb2hex(a),e[3*i]=a[0],e[3*i+1]=a[1],e[3*i+2]=a[2];var s=l[1];"number"==typeof s?s=o.hex2rgb(s):l[1]=o.rgb2hex(s),n[3*i]=s[0],n[3*i+1]=s[1],n[3*i+2]=s[2]}this._replacements=r},enumerable:!1,configurable:!0}),e.prototype.refresh=function(){this.replacements=this._replacements},Object.defineProperty(e.prototype,"maxColors",{get:function(){return this._maxColors},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"epsilon",{get:function(){return this.uniforms.epsilon},set:function(r){this.uniforms.epsilon=r},enumerable:!1,configurable:!0}),e}(e.Filter);return r.MultiColorReplaceFilter=t,Object.defineProperty(r,"__esModule",{value:!0}),r}({},PIXI,PIXI.utils);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-multi-color-replace.js.map
